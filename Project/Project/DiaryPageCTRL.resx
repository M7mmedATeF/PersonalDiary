<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>