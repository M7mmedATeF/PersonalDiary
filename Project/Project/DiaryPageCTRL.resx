<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>