<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>